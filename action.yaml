name: 'Validate STACKIT Database ACLs'
description: 'A github action that uses the STACKIT API to ensure that database ACLs only allow the cluster to connect to the database instances.'
inputs:
  organisation_id:
    description: 'The Organisation ID, to validate all Databases in your STACKIT organisation.'
    required: true
  stackit_service_account_key_path:
    description: "Path to a STACKIT Service Account Key to authenticate against STACKIT API"
    required: true

runs:
  using: 'composite'
  steps:
    - run: echo "INSTALL PYTHON"
      shell: bash
    - name: "Install Python"
      uses: actions/setup-python@v5
      with:
        python-version-file: ${{ github.action_path }}/.python-version
    - run: echo "INSTALL UV"
      shell: bash
    - name: "Install uv"
      uses: astral-sh/setup-uv@v6
      with:
        working-directory: ${{ github.action_path }}
    - run: echo "RUN script"
      shell: bash
    - name: "Install dependencies"
      run: uv sync
      working-directory: ${{ github.action_path }}
      shell: bash
    - name: "Validate STACKIT Database ACLs"
      run:  uv run src/main.py validate-org ${{ inputs.organisation_id }}
      shell: bash
      working-directory: ${{ github.action_path }}
      env:
        STACKIT_SERVICE_ACCOUNT_KEY_PATH: ${{ inputs.stackit_service_account_key_path }}