name: 'Validate STACKIT Database ACLs'
description: 'A github action that uses the STACKIT API to ensure that database ACLs only allow the cluster to connect to the database instances.'
inputs:
  organisation_id:
    description: 'The Organisation ID, to validate all Databases in your STACKIT organisation. Either provide organisation_id or project_id'
    required: false
  project_id:
    description: 'The Project ID, to validate all Databases in your STACKIT project.'
    required: false
  prod_egress_range:
    description: 'The CIDR Range of the production cluster'
    required: false
  non_prod_egress_range:
    description: 'The CIDR Range of the non-prod cluster'
    required: false
  stackit_service_account_key:
    description: "STACKIT Service Account Key to authenticate against STACKIT API"
    required: true

runs:
  using: 'composite'
  steps:
    - name: "Install Python"
      uses: actions/setup-python@v5
      with:
        python-version-file: ${{ github.action_path }}/.python-version
    - name: "Install uv"
      uses: astral-sh/setup-uv@v6
      with:
        ignore-empty-workdir: true
        working-directory: ${{ github.action_path }}
    - name: "Install STACKIT CLI"
      shell: bash
      run: |
        sudo apt-get install curl gnupg
        curl https://packages.stackit.cloud/keys/key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/stackit.gpg
        echo "deb [signed-by=/usr/share/keyrings/stackit.gpg] https://packages.stackit.cloud/apt/cli stackit main" | sudo tee -a /etc/apt/sources.list.d/stackit.list
        sudo apt-get update
        sudo apt-get install stackit
    - name: "Install dependencies"
      run: uv sync
      working-directory: ${{ github.action_path }}
      shell: bash
    - name: "Setup STACKIT Credentials"
      shell: bash
      env:
        STACKIT_SERVICE_ACCOUNT_KEY: ${{ inputs.stackit_service_account_key }}
      run: |
        echo "$STACKIT_SERVICE_ACCOUNT_KEY" > ${{ github.action_path }}/stackit-credentials.json
    - name: "Validate STACKIT Database ACLs in Organisation"
      if: ${{ inputs.organisation_id }}
      shell: bash
      run:  uv run src/main.py validate-org ${{ inputs.organisation_id }}
      working-directory: ${{ github.action_path }}
      env:
        STACKIT_SERVICE_ACCOUNT_KEY_PATH: ${{ github.action_path }}/stackit-credentials.json
    - name: "Validate STACKIT Database ACLs in Project"
      if: ${{ inputs.project_id }}
      shell: bash
      run:  uv run src/main.py validate-projects ${{ inputs.project_id }}
      working-directory: ${{ github.action_path }}
      env:
        STACKIT_SERVICE_ACCOUNT_KEY_PATH: ${{ github.action_path }}/stackit-credentials.json
        PROD_EGRESS_RANGE: ${{ inputs.prod_egress_range }}
        NON_PROD_EGRESS_RANGE: ${{ inputs.non_prod_egress_range }}