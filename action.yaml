name: 'Validate STACKIT Database ACLs'
description: 'A github action that uses the STACKIT API to ensure that database ACLs only allow the cluster to connect to the database instances.'
inputs:
  organisation_id:
    description: 'The Organisation ID, to validate all Databases in your STACKIT organisation.'
    required: true
  stackit_service_account_key:
    description: "STACKIT Service Account Key to authenticate against STACKIT API"
    required: true

runs:

  using: 'composite'
  steps:
    - run: echo "INSTALL PYTHON"
      shell: bash
    - name: "Install Python"
      uses: actions/setup-python@v5
      with:
        python-version-file: ${{ github.action_path }}/.python-version
    - run: echo "INSTALL UV"
      shell: bash
    - name: "Install uv"
      uses: astral-sh/setup-uv@v6
      with:
        working-directory: ${{ github.action_path }}
    - name: "Install stackit cli"
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install curl gnupg
        curl https://packages.stackit.cloud/keys/key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/stackit.gpg
        echo "deb [signed-by=/usr/share/keyrings/stackit.gpg] https://packages.stackit.cloud/apt/cli stackit main" | sudo tee -a /etc/apt/sources.list.d/stackit.list
        sudo apt-get update
        sudo apt-get install stackit
    - run: echo "RUN script"
      shell: bash
    - name: "Install dependencies"
      run: uv sync
      working-directory: ${{ github.action_path }}
      shell: bash
    - name: "Setup STACKIT Credentials"
      shell: bash
      env:
        STACKIT_SERVICE_ACCOUNT_KEY: ${{ inputs.stackit_service_account_key }}
      run: |
        echo "$STACKIT_SERVICE_ACCOUNT_KEY"
        echo "$STACKIT_SERVICE_ACCOUNT_KEY" > ${{ github.action_path }}/stackit-credentials.json
    - name: "test credentials"
      shell: bash
      run: echo ${{ github.action_path }}/stackit-credentials.json

    - name: "Validate STACKIT Database ACLs"
      shell: bash
      run:  uv run src/main.py validate-org ${{ inputs.organisation_id }}
      working-directory: ${{ github.action_path }}
      env:
        STACKIT_SERVICE_ACCOUNT_KEY_PATH: ${{ github.action_path }}/stackit-credentials.json